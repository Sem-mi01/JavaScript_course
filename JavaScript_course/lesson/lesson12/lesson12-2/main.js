// console.log('start'); // синхронна функція
//
// setTimeout(function () {
//     console.log('hi');
// }, 1000); // aсинхронна функція. виконуються виконується по мірі завантаження та виконання всіх винхронних функцій.В даному випадку завантаженн відкладено на 1 секунду
//
// setTimeout(function () {
//     console.log('hello');
// }, 200);
//
// console.log('end'); // синхронна функція. виконуються по черзі

// Callback hell більш складніше i не використовується програмістами
// setTimeout(function () {
//     console.log('hi 1');
//     setTimeout(function () {
//         console.log('hi 2');
//         setTimeout(function () {
//             console.log('hi 3');
//             setTimeout(function () {
//                 console.log('hi 4');
//             }, 1000);
//         }, 1000);
//     }, 1000);
// }, 1000);
// Callback hell, також відомий як "піраміда загибелі", в JavaScript - це ситуація, коли багато вкладених колбеків (функцій, що передаються як аргументи іншим функціям для обробки результатів асинхронних операцій) роблять код важким для читання, розуміння та підтримки


let x = 1;

        setTimeout(function (){
            x = 1000;
        }, 1000);

console.log(x);     // 1 (1000 не виведе, оскільки асинхронна функція виконується лише після вииконання всіх синхронних)